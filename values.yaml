# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  image:
    repository: artifact.onwalk.net
    pullPolicy: IfNotPresent

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


velero:
  enable: true
  configuration:
    backupStorageLocation:
      bucket: velero-2
    provider: aws
    volumeSnapshotLocation:
      config: 
        region: us-west-2
  credentials:
    useSecret: false
  initContainers:
  - name: velero-plugin-for-aws
    image: velero/velero-plugin-for-aws:v1.2.0
    volumeMounts:
    - mountPath: /target
      name: plugins
  serviceAccount:
    server:
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::582834524017:role/eks-velero-backup"

kube2iam:
  enable: true
  podAnnotations:
    iam.amazonaws.com/role: "arn:aws:iam::582834524017:role/kubeiamRole"
  rbac:
    create: true
    serviceAccountName: kube2iam
  verbose: true
  host:
    iptables: true
    interface: "eni+"
    port: 8181
  extraArgs:
    base-role-arn: "arn:aws:iam::582834524017:role/"
